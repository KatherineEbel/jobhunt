<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1732b3e4-0a88-4a80-8a64-76d35cc2c355" name="Changes" comment="stub auth, user, and job routes">
      <change afterPath="$PROJECT_DIR$/apps/api/src/__tests__/User.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/config/testDb.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/errors/APIError.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/errors/DBError.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/middleware/validatorMiddleware.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/models/User.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/services/user.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/config/environment.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/config/environment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/controllers/auth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/controllers/auth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/controllers/users.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/controllers/users.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/middleware/errorMiddleware.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/middleware/errorMiddleware.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/routes/auth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/routes/auth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/server.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/server.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="CSS File" />
        <option value="TypeScript JSX File" />
        <option value="HTTP Request" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Cip0pxQVBhpPsTJ1fNpvcGTipW" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Project.color": "203150",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/katherine/Developer/WebstormProjects/jobhunt/apps/docs/stories",
    "list.type.of.created.stylesheet": "CSS",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/katherine/Developer/WebstormProjects/jobhunt/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/katherine/Developer/WebstormProjects/turbo-repo-cra-express-template/node_modules/prettier",
    "settings.editor.selected.configurable": "settings.javascript.linters.eslint",
    "ts.external.directory.path": "/Users/katherine/Developer/WebstormProjects/jobhunt/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mongo"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/docs/stories" />
      <recent name="$PROJECT_DIR$/packages/ui/src" />
      <recent name="$PROJECT_DIR$/apps/web/src" />
      <recent name="$PROJECT_DIR$/apps/web/src/context" />
      <recent name="$PROJECT_DIR$/apps/web/src/pages" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/api/src" />
      <recent name="$PROJECT_DIR$/apps/web/src" />
      <recent name="$PROJECT_DIR$/apps" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="npm run clean" />
      <command value="touch .eslintignore" />
      <command value="yarn workspace api add yup" />
      <command value="yarn workspace api add express-async-handler" />
      <command value="yarn workspace api add express-async-errors" />
      <command value="yarn workspace api remove express-async-handler" />
      <command value="yarn workspace api add http-status-codes" />
      <command value="yarn workspace api add @types/http-status-codes --dev" />
      <command value="yarn workspace api add bcryptjs" />
      <command value="yarn workspace api add @types/bcryptjs --dev" />
      <command value="yarn workspace api add @types/jsonwebtoken --dev" />
      <command value="yarn workspace api add jsonwebtoken --dev" />
      <command value="yarn workspace api add mongodb-memory-server --dev" />
    </option>
  </component>
  <component name="RunManager" selected="Jest.UserModel.saving.should throw error if saved without passwordHash">
    <configuration name="UserModel.saving.should throw error if saved without passwordHash" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/User.test.ts" />
      <test-names>
        <test-name value="UserModel" />
        <test-name value="saving" />
        <test-name value="should throw error if saved without passwordHash" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="UserModel.should be invalid if fields are empty" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/User.test.ts" />
      <test-names>
        <test-name value="UserModel" />
        <test-name value="should be invalid if fields are empty" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="UserModel.should be invalid if firstName is empty" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/User.test.ts" />
      <test-names>
        <test-name value="UserModel" />
        <test-name value="should be invalid if firstName is empty" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.emails must be unique" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="emails must be unique" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.login route returns 200" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="login route returns 200" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.login route returns 401 with invalid password" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="login route returns 401 with invalid password" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.register returns 422 with invalid request" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="register returns 422 with invalid request" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.register route returns 200 when request valid" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="register route returns 200 when request valid" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.auth routes.register route returns 201 when request valid" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="auth routes" />
        <test-name value="register route returns 201 when request valid" />
      </test-names>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.UserModel.should be invalid if firstName is empty" />
      <item itemvalue="Jest.server.auth routes.emails must be unique" />
      <item itemvalue="Jest.server.auth routes.login route returns 200" />
      <item itemvalue="Jest.server.auth routes.login route returns 401 with invalid password" />
      <item itemvalue="Jest.server.auth routes.register route returns 201 when request valid" />
      <item itemvalue="Jest.UserModel.saving.should throw error if saved without passwordHash" />
      <item itemvalue="Jest.UserModel.should be invalid if fields are empty" />
      <item itemvalue="Jest.server" />
      <item itemvalue="Jest.server.auth routes.register route returns 200 when request valid" />
      <item itemvalue="Jest.server.auth routes.register returns 422 with invalid request" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.UserModel.saving.should throw error if saved without passwordHash" />
        <item itemvalue="Jest.UserModel.should be invalid if fields are empty" />
        <item itemvalue="Jest.server" />
        <item itemvalue="Jest.server.auth routes.register route returns 200 when request valid" />
        <item itemvalue="Jest.server.auth routes.register returns 422 with invalid request" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1732b3e4-0a88-4a80-8a64-76d35cc2c355" name="Changes" comment="" />
      <created>1659295038783</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1659295038783</updated>
      <workItem from="1659295039849" duration="5843000" />
      <workItem from="1659301447032" duration="8569000" />
    </task>
    <task id="LOCAL-00001" summary="remove assets from ui library. Start preparing to use as template">
      <created>1659295669835</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1659295669835</updated>
    </task>
    <task id="LOCAL-00002" summary="add nginx config to web app">
      <created>1659300212666</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1659300212666</updated>
    </task>
    <task id="LOCAL-00003" summary="working docker config">
      <created>1659311288783</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1659311288783</updated>
    </task>
    <task id="LOCAL-00004" summary="update README">
      <created>1659311363321</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1659311363321</updated>
    </task>
    <task id="LOCAL-00005" summary="Initial commit">
      <created>1659314189978</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1659314189978</updated>
    </task>
    <task id="LOCAL-00006" summary="Start building out ui components">
      <created>1659365241069</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1659365241069</updated>
    </task>
    <task id="LOCAL-00007" summary="stub auth, user, and job routes">
      <created>1659378656847</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1659378656847</updated>
    </task>
    <task id="LOCAL-00008" summary="stub auth, user, and job routes">
      <created>1659381531408</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1659381531408</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="remove assets from ui library. Start preparing to use as template" />
    <MESSAGE value="add nginx config to web app" />
    <MESSAGE value="working docker config" />
    <MESSAGE value="update README" />
    <MESSAGE value="Initial commit" />
    <MESSAGE value="Start building out ui components" />
    <MESSAGE value="stub auth, user, and job routes" />
    <option name="LAST_COMMIT_MESSAGE" value="stub auth, user, and job routes" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts</url>
          <line>111</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/middleware/errorMiddleware.ts</url>
          <line>7</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/config/testDb.ts</url>
          <line>21</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/config/testDb.ts</url>
          <line>14</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>