<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b6d8152f-e918-46a7-a4e9-34c64c7b909e" name="Changes" comment="refactor web app using redux-toolkit">
      <change afterPath="$PROJECT_DIR$/apps/web/src/app/store.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/features/alert/alertSlice.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/features/auth/authSlice.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/features/jobs/jobsSlice.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/hooks/store.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/mocks/handlers.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/mocks/server.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/web/src/services/jobHuntApi.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/lib/src/alert.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/controllers/auth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/controllers/auth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/routes/profile.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/routes/profile.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/server.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/server.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/services/job.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/services/job.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/App.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/App.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/Nav.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/Nav.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/context/appContext.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/context/appReducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/context/createCtx.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/links.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/links.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/AddJob.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/AddJob.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Dashboard.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Dashboard.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Jobs.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Jobs.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Profile.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Profile.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Stats.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Dashboard/Stats.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Error.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Error.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/ProtectedRoute.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/ProtectedRoute.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/pages/Register.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/pages/Register.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/setupTests.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/setupTests.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/testUtils.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/testUtils.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/lib/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/lib/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/lib/src/job/model.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/lib/src/job/model.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/lib/src/job/schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/lib/src/job/schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/lib/src/user/model.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/lib/src/user/model.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/src/Alert.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/src/Alert.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/src/Alert.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/src/Alert.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/SearchForm.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/SearchForm.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Request" />
        <option value="HTTP Public Environment File" />
        <option value="tsconfig.json" />
        <option value="TypeScript JSX File" />
        <option value="JavaScript File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/requests-with-authorization.http" environment="test" />
    <file url="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/requests-with-tests.http" environment="test" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2CpcqoFyItFNnEwVm0xnHsfiFYd" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Project.color": "203150",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/katherine/Developer/WebstormProjects/jobhunt/packages/ui/src/Dashboard/AllJobs/Charts",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/katherine/Developer/WebstormProjects/jobhunt/node_modules/react-scripts",
    "nodejs_package_manager_path": "yarn",
    "ts.external.directory.path": "/Users/katherine/Developer/WebstormProjects/jobhunt/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mongo"
    ],
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "TypeScript"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/Charts" />
      <recent name="$PROJECT_DIR$/packages/ui/src" />
      <recent name="$PROJECT_DIR$/apps/api/src/services" />
      <recent name="$PROJECT_DIR$/apps/api/src/__tests__" />
      <recent name="$PROJECT_DIR$/packages/jest-presets/jest" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/web/src/app" />
      <recent name="$PROJECT_DIR$/apps/web/src/features" />
      <recent name="$PROJECT_DIR$/apps/api/src/config" />
      <recent name="$PROJECT_DIR$/apps/api/src" />
      <recent name="$PROJECT_DIR$/apps/api/src/models" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="yarn workspace web add use-local-storage" />
      <command value="yarn workspace web remove use-local-storage" />
      <command value="yarn workspace web add use-local-storage-state" />
      <command value="yarn run test --filter=ui" />
      <command value="yarn run dev --filter=web" />
      <command value="yarn run dev --filter=api" />
      <command value="yarn workspace jobs add yup" />
      <command value="yarn workspace jobs add tsup --dev" />
      <command value="yarn workspace jobs add typescript --dev" />
      <command value="yarn run clean --filter=jobs" />
      <command value="yarn run build --filter=jobs" />
      <command value="yarn test --filter=web" />
      <command value="yarn run dev --filter=lib" />
      <command value="yarn run clean --filter=lib" />
      <command value="yarn run clean --filter=ui" />
      <command value="yarn run test:ci --filter=web" />
      <command value="yarn test --filter=ui" />
      <command value="yarn run test --filter=api" />
      <command value="yarn workspace lib add date-fns" />
      <command value="yarn workspace api add @faker-js/faker --dev" />
      <command value="yarn test" />
      <command value="yarn workspace api add ts-node-dev --dev" />
      <command value="yarn run seed --filter=api" />
      <command value="yarn run seed" />
      <command value="yarn run dev --filter=ui" />
      <command value="yarn run dev" />
      <command value="yarn workspace ui add recharts" />
      <command value="yarn run test --filter=web" />
      <command value="yarn workspace web add recharts --peer" />
      <command value="yarn" />
      <command value="yarn workspace web add @reduxjs/toolkit" />
      <command value="yarn workspace web add react-redux" />
      <command value="yarn run build --filter=ui" />
      <command value="yarn run test" />
      <command value="yarn run test:ci" />
      <command value="yarn run test:ci --filter=api" />
      <command value="yarn workspace web add msw --dev" />
    </option>
  </component>
  <component name="RunManager" selected="Jest.App.with user.stats screen rendered">
    <configuration name="jobs | /DELETE a job" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/apps/api/jobs.http" index="4" requestIdentifier="/DELETE a job" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Alert.render" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/Alert.test.tsx" />
      <test-names>
        <test-name value="Alert" />
        <test-name value="render" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="App.render lands on stats page and renders user name" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$/apps/web" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/web/src/App.test.tsx" />
      <test-names>
        <test-name value="App" />
        <test-name value="render lands on stats page and renders user name" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="App.renders correct heading" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$/apps/web" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/web/src/App.test.tsx" />
      <test-names>
        <test-name value="App" />
        <test-name value="renders correct heading" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="App.with user.stats screen rendered" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$/apps/web" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/web/src/App.test.tsx" />
      <test-names>
        <test-name value="App" />
        <test-name value="with user" />
        <test-name value="stats screen rendered" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="JobForm.valid input.onSubmit called" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.test.tsx" />
      <test-names>
        <test-name value="JobForm" />
        <test-name value="valid input" />
        <test-name value="onSubmit called" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="JobListItem.job properties rendered" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/JobListItem.test.tsx" />
      <test-names>
        <test-name value="JobListItem" />
        <test-name value="job properties rendered" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="ProfileForm.form submitted with correct values" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/Dashboard/Profile/ProfileForm.test.tsx" />
      <test-names>
        <test-name value="ProfileForm" />
        <test-name value="form submitted with correct values" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="ProfileForm.user field filled in when user provided" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/Dashboard/Profile/ProfileForm.test.tsx" />
      <test-names>
        <test-name value="ProfileForm" />
        <test-name value="user field filled in when user provided" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="RegisterForm.invalid input.invalid email displays error message" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/RegisterForm.test.tsx" />
      <test-names>
        <test-name value="RegisterForm" />
        <test-name value="invalid input" />
        <test-name value="invalid email displays error message" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="RegisterForm.toggle isMember" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/ui" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/packages/ui/src/RegisterForm.test.tsx" />
      <test-names>
        <test-name value="RegisterForm" />
        <test-name value="toggle isMember" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="formatDateString" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/packages/lib" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/packages/lib/src/helpers.test.ts" />
      <test-names>
        <test-name value="formatDateString" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="renders correct heading" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/web" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/web/src/App.test.tsx" />
      <test-names>
        <test-name value="renders correct heading" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.job routes.when logged in" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.require auth routes.job routes.when logged in.delete returns 200 when authenticated" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="require auth routes" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
        <test-name value="delete returns 200 when authenticated" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.require auth routes.job routes.when logged in.get &quot;/&quot; returns 200" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="require auth routes" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
        <test-name value="get &quot;/&quot; returns 200" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.require auth routes.job routes.when logged in.patch returns 200 and returns updated job" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="require auth routes" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
        <test-name value="patch returns 200 and returns updated job" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.require auth routes.job routes.when logged in.patch returns 404 when job doesn't exist" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/__tests__/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="require auth routes" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
        <test-name value="patch returns 404 when job doesn't exist" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="server.require auth routes.job routes.when logged in.stats returns 200 when authenticated" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/apps/api" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/apps/api/src/server.test.ts" />
      <test-names>
        <test-name value="server" />
        <test-name value="require auth routes" />
        <test-name value="job routes" />
        <test-name value="when logged in" />
        <test-name value="stats returns 200 when authenticated" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="DebugClient" type="JavascriptDebugType" uri="http://localhost:3000" useFirstLineBreakpoints="true">
      <method v="2" />
    </configuration>
    <configuration name="build --filter=ui" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <arguments value="--filter=ui" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:ci --filter=api" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:ci" />
      </scripts>
      <arguments value="--filter=api" />
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:ci" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:ci" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="HTTP Request.jobs | /DELETE a job" />
      <item itemvalue="JavaScript Debug.DebugClient" />
      <item itemvalue="Jest.App.with user.stats screen rendered" />
      <item itemvalue="Jest.App.render lands on stats page and renders user name" />
      <item itemvalue="Jest.JobForm.valid input.onSubmit called" />
      <item itemvalue="Jest.JobListItem.job properties rendered" />
      <item itemvalue="Jest.formatDateString" />
      <item itemvalue="Jest.server.require auth routes.job routes.when logged in.delete returns 200 when authenticated" />
      <item itemvalue="Jest.server.require auth routes.job routes.when logged in.get &quot;/&quot; returns 200" />
      <item itemvalue="Jest.server.require auth routes.job routes.when logged in.patch returns 200 and returns updated job" />
      <item itemvalue="Jest.server.require auth routes.job routes.when logged in.patch returns 404 when job doesn't exist" />
      <item itemvalue="Jest.server.require auth routes.job routes.when logged in.stats returns 200 when authenticated" />
      <item itemvalue="Jest.App.renders correct heading" />
      <item itemvalue="Jest.ProfileForm.form submitted with correct values" />
      <item itemvalue="Jest.ProfileForm.user field filled in when user provided" />
      <item itemvalue="Jest.renders correct heading" />
      <item itemvalue="Jest.Alert.render" />
      <item itemvalue="Jest.RegisterForm.invalid input.invalid email displays error message" />
      <item itemvalue="Jest.RegisterForm.toggle isMember" />
      <item itemvalue="Jest.server.job routes.when logged in" />
      <item itemvalue="npm.build --filter=ui" />
      <item itemvalue="npm.test" />
      <item itemvalue="npm.test:ci --filter=api" />
      <item itemvalue="npm.test:ci" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="npm.test" />
        <item itemvalue="npm.test:ci --filter=api" />
        <item itemvalue="HTTP Request.jobs | /DELETE a job" />
        <item itemvalue="npm.test:ci" />
        <item itemvalue="npm.build --filter=ui" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b6d8152f-e918-46a7-a4e9-34c64c7b909e" name="Changes" comment="" />
      <created>1659503161183</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1659503161183</updated>
      <workItem from="1659503162855" duration="9534000" />
      <workItem from="1659572989687" duration="14957000" />
      <workItem from="1659966017195" duration="111929000" />
    </task>
    <task id="LOCAL-00001" summary="protect jobs and user routes">
      <created>1659543722494</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1659543722494</updated>
    </task>
    <task id="LOCAL-00002" summary="setup ui package for jest">
      <created>1659549789426</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1659549789426</updated>
    </task>
    <task id="LOCAL-00003" summary="ui for profile page">
      <created>1659567626042</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1659567626042</updated>
    </task>
    <task id="LOCAL-00004" summary="implement create job in api">
      <created>1659874638373</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1659874638373</updated>
    </task>
    <task id="LOCAL-00005" summary="implement create job form, move common model code into lib package">
      <created>1659980510883</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1659980510883</updated>
    </task>
    <task id="LOCAL-00006" summary="implement create job form, move common model code into lib package">
      <created>1659980600343</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1659980600343</updated>
    </task>
    <task id="LOCAL-00007" summary="update AuthUser type. use local user by default for appContext">
      <created>1659983271537</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1659983271537</updated>
    </task>
    <task id="LOCAL-00008" summary="get jobs for current user">
      <created>1660001935304</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1660001935304</updated>
    </task>
    <task id="LOCAL-00009" summary="change user route to profile">
      <created>1660002218443</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1660002218443</updated>
    </task>
    <task id="LOCAL-00010" summary="handle ui when loading jobs">
      <created>1660011038922</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1660011038922</updated>
    </task>
    <task id="LOCAL-00011" summary="display user jobs client">
      <created>1660024954338</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1660024954338</updated>
    </task>
    <task id="LOCAL-00012" summary="implement update job client and api">
      <created>1660056196881</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1660056196882</updated>
    </task>
    <task id="LOCAL-00013" summary="make sure only job owner can update a job">
      <created>1660057818153</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1660057818153</updated>
    </task>
    <task id="LOCAL-00014" summary="relocate test in api">
      <created>1660065053224</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1660065053224</updated>
    </task>
    <task id="LOCAL-00015" summary="relocate test in api">
      <created>1660065066748</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1660065066748</updated>
    </task>
    <task id="LOCAL-00016" summary="implement delete job in api">
      <created>1660069088227</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1660069088227</updated>
    </task>
    <task id="LOCAL-00017" summary="implement delete job for web">
      <created>1660076503646</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1660076503646</updated>
    </task>
    <task id="LOCAL-00018" summary="show stats for jobs">
      <created>1660102225927</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1660102225927</updated>
    </task>
    <task id="LOCAL-00019" summary="display charts for job stats">
      <created>1660139846358</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1660139846358</updated>
    </task>
    <option name="localTasksCounter" value="20" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="dashboard sidebars and stub dashboard pages" />
    <MESSAGE value="protect jobs and user routes" />
    <MESSAGE value="don't close large sidebar when nav link clicked" />
    <MESSAGE value="setup ui package for jest" />
    <MESSAGE value="ui for profile page" />
    <MESSAGE value="implement update user profile" />
    <MESSAGE value="implement create job in api" />
    <MESSAGE value="implement create job form, move common model code into lib package" />
    <MESSAGE value="update AuthUser type. use local user by default for appContext" />
    <MESSAGE value="get jobs for current user" />
    <MESSAGE value="change user route to profile" />
    <MESSAGE value="handle ui when loading jobs" />
    <MESSAGE value="display user jobs client" />
    <MESSAGE value="implement update job client and api" />
    <MESSAGE value="make sure only job owner can update a job" />
    <MESSAGE value="relocate test in api" />
    <MESSAGE value="implement delete job in api" />
    <MESSAGE value="implement delete job for web" />
    <MESSAGE value="show stats for jobs" />
    <MESSAGE value="display charts for job stats" />
    <MESSAGE value="job filters api" />
    <MESSAGE value="refactor web app using redux-toolkit" />
    <option name="LAST_COMMIT_MESSAGE" value="refactor web app using redux-toolkit" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/packages/ui/src/register/RegisterForm.tsx</url>
          <line>64</line>
          <option name="timeStamp" value="44" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/packages/ui/src/Dashboard/Profile/ProfileForm.tsx</url>
          <line>44</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/pages/Dashboard/Profile.tsx</url>
          <line>12</line>
          <option name="timeStamp" value="46" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/JobListItem.test.tsx</url>
          <line>22</line>
          <option name="timeStamp" value="99" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/controllers/jobs.ts</url>
          <line>69</line>
          <option name="timeStamp" value="100" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/middleware/errorMiddleware.ts</url>
          <line>4</line>
          <option name="timeStamp" value="101" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/services/job.ts</url>
          <line>52</line>
          <option name="timeStamp" value="103" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/server.test.ts</url>
          <line>499</line>
          <option name="timeStamp" value="109" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/hooks/useJobs.ts</url>
          <line>26</line>
          <option name="timeStamp" value="116" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/hooks/useJobs.ts</url>
          <line>47</line>
          <option name="timeStamp" value="119" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/hooks/useJobs.ts</url>
          <line>37</line>
          <option name="timeStamp" value="124" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/controllers/jobs.ts</url>
          <line>82</line>
          <option name="timeStamp" value="129" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/packages/ui/src/Dashboard/AllJobs/JobList.tsx</url>
          <line>36</line>
          <option name="timeStamp" value="131" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/controllers/jobs.ts</url>
          <line>45</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/services/job.ts</url>
          <line>37</line>
          <option name="timeStamp" value="136" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/packages/ui/src/Dashboard/AddJob/JobForm.tsx</url>
          <line>55</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="150" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/features/jobs/jobsSlice.ts</url>
          <line>21</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="151" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/api/src/controllers/auth.ts</url>
          <line>26</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="152" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/apps/web/src/mocks/handlers.ts</url>
          <line>4</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="158" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>